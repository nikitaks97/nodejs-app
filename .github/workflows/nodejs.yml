name: Node.js CI CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: SonarQube Scan
        id: sonarqube
        uses: SonarSource/sonarqube-scan-action@v2.0.2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: SonarQube Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        with:
          scanMetadataReportFile: .scannerwork/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - name: Install dependencies
        run: |
            npm install 
            npm install mocha --save-dev
            chmod +x node_modules/.bin/mocha
      - name: test 
        run: npm run test
      - name: build
        run: npm run build
      - name: docker login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
            context: .
            push: true
            tags: ${{ vars.DOCKERHUB_USERNAME }}/nodejs12:v1.1
      - name: setup Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'
      - name: Set up Kubeconfig
        run: |
              mkdir -p ~/.kube
              echo "${{ secrets.KUBECONFIG }}" >> $HOME/.kube/config
               
     # - name: Deploy to Kubernetes
     #   run: |
     #           kubectl apply --insecure-skip-tls-verify -f k8s-deployment.yaml --validate=false
     #           kubectl apply --insecure-skip-tls-verify -f k8s-service.yaml --validate=false
     #           kubectl get pods
     #           kubectl get services



